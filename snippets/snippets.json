{"console.log": {
    "prefix": "clg",
    "body": ["console.log(${1:object})"],
    "description": "console.log"
  },
  "console.log with name": {
    "prefix": "clgn",
    "body": ["console.log('${1:object}',${1:object})"],
    "description": "console.log with name"
  },
  "useState": {
    "prefix": "ush",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);$0"],
    "description": "React useState() hook"
  },
  "useEffect": {
    "prefix": "ueh",
    "body": ["useEffect(() => {", "\t$1", "}, [$2]);$0"],
    "description": "React useEffect() hook"
  },
  "useCallback": {
    "prefix": "uch",
    "body": ["const $1 = useCallback(() => {", "\t$2", "\t},[$3],", ");$0"],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "umh",
    "body": ["const $1 = useMemo(() => {", "\t$2", "}, [$3]);$0"],
    "description": "React useMemo() hook"
  },
  "useRef": {
    "prefix": "urh",
    "body": ["const $1 = useRef($2)$0"],
    "description": "React useRef() hook"
  },
  "useSelector": {
    "prefix": "uss",
    "body": ["const $1 = useSelector((state: iRootState) => state.$2);$0"]
  },
  "useDispatchFunction": {
    "prefix": "usd",
    "body": ["const dispatch = useDispatch<Dispatch>();"]
  },
  "import react hooks": {
    "prefix": "imrh",
    "body": ["import React, { $1 } from 'react';$0"]
  },
  "import react": {
    "prefix": "imr",
    "body": ["import * as React from 'react';$0"]
  },
  "import react-redux hooks": {
    "prefix": "imd",
    "body": ["import { useSelector, useDispatch } from 'react-redux';"]
  },
  "antd": {
    "prefix": "ima",
    "body": ["import { $1 } from 'antd';$0"]
  },
  "import classnames": {
    "prefix": "imc",
    "body": ["import classnames from 'classnames';$0"]
  },
  "import svg": {
      "prefix": "ims",
      "body":["import { ReactComponent as set${1/(.*)/${1:/capitalize}/}Svg } from '$1.svg';$0"]
  },
  "react component template": {
    "prefix": "imt",
    "body": ["import React from 'react';",
        "import styles from './index.module.less';",
        "interface I$1 {",
        "\t",
        "}",
        "const ${2:FC}: React.FC<I$1> = (props) => {",
        "\treturn (",
        "\t\t",
        "\t);",
        "};",
        "export default React.memo(${2:FC});"
    ]
  },
  "redux component template": {
    "prefix": "imdt",
    "body": ["import React from 'react';",
        "import styles from './index.module.less';",
        "import { useDispatch, useSelector } from 'react-redux';",
        "import { Dispatch, iRootState } from '../store';",
        "interface I$1 {",
        "\t",
        "}",
        "const ${2:FC}: React.FC<I$1> = (props) => {",
        "\tconst dispatch = useDispatch<Dispatch>();",
        "\tconst $3 = useSelector((state: iRootState) => state.);",
        "\treturn (",
        "\t\t",
        "\t);",
        "};",
        "export default React.memo(${2:FC});"
    ]
  }
}
