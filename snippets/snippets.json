{
  "console.log": {
    "prefix": "clg",
    "body": ["console.log(${1:object});"],
    "description": "console.log"
  },
  "console.log with name": {
    "prefix": "clgn",
    "body": ["console.log('${1:object}',${1:object});"],
    "description": "console.log with name"
  },
  "className": {
    "prefix": "cls",
    "body": ["className={styles.$1}$0"],
    "description": "react className"
  },
  "text ellipsis": {
    "prefix": "elli",
    "body": [
      "white-space: nowrap;",
      "text-overflow: ellipsis;",
      "overflow: hidden;",
      "max-length: 10em;"
    ],
    "description": "css ellipsis"
  },
  "css vars":{
    "prefix": "v--",
    "body": [
      "var(--$1);"
    ],
    "description": "css vars"
  },
  "useState": {
    "prefix": "ush",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);$0"],
    "description": "React useState() hook"
  },
  "useEffect": {
    "prefix": "ueh",
    "body": ["useEffect(() => {", "\t$1", "}, [$2]);$0"],
    "description": "React useEffect() hook"
  },
  "useCallback": {
    "prefix": "uch",
    "body": ["const $1 = useCallback(() => {", "\t$2", "\t},[$3],", ");$0"],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "umh",
    "body": ["const $1 = useMemo(() => {", "\t$2", "}, [$3]);$0"],
    "description": "React useMemo() hook"
  },
  "useRef": {
    "prefix": "urh",
    "body": ["const $1 = useRef($2);$0"],
    "description": "React useRef() hook"
  },
  "useSelector": {
    "prefix": "uss",
    "body": ["const $1 = useSelector((state: iRootState) => state.$2);$0"]
  },
  "useDispatchFunction": {
    "prefix": "usd",
    "body": ["const dispatch = useDispatch<Dispatch>();"]
  },
  "import module": {
    "prefix": "imm",
    "body": ["import $1 from '$2$1';"]
  },
  "import react hooks": {
    "prefix": "imrh",
    "body": ["import React, { $1 } from 'react';$0"]
  },
  "import react": {
    "prefix": "imr",
    "body": ["import * as React from 'react';$0"]
  },
  "import react-redux hooks": {
    "prefix": "imd",
    "body": ["import { useSelector, useDispatch } from 'react-redux';"]
  },
  "antd": {
    "prefix": "ima",
    "body": ["import { $1 } from 'antd';$0"]
  },
  "import classnames": {
    "prefix": "imc",
    "body": ["import classnames from 'classnames';$0"]
  },
  "import svg": {
    "prefix": "ims",
    "body": [
      "import { ReactComponent as ${1/(.*)/${1:/capitalize}/}Svg } from '$2$1.svg';$0"
    ]
  },
  "import loadable": {
    "prefix": "iml",
    "body": ["import loadable from '@loadable/component';"]
  },
  "const loadable component": {
    "prefix": "lmm",
    "body": ["const $1 = loadable(() => import('$1'));$0"]
  },
  "cover global styles": {
    "prefix": "glb",
    "body": ["& :global($1){", "\t$2", "};$0"]
  },
  "event prevent default and stop prapagation": {
    "prefix": "esp",
    "body": ["e.stopPropagation();", "e.preventDefault();"]
  },
  "react component template": {
    "prefix": "imt",
    "body": [
      "import React from 'react';",
      "import styles from './index.module.less';",
      "interface Props {",
      "\t$2",
      "}",
      "const ${1:FC} = (props: Props) => {",
      "\treturn (",
      "\t\t",
      "\t);",
      "};",
      "export default React.memo(${1:FC});"
    ]
  },
  "redux component template": {
    "prefix": "imdt",
    "body": [
      "import React from 'react';",
      "import styles from './index.module.less';",
      "import { useDispatch, useSelector } from 'react-redux';",
      "import { Dispatch, iRootState } from '../store';",
      "interface Props {",
      "\t",
      "}",
      "const ${1:FC} = (props: Props) => {",
      "\tconst dispatch = useDispatch<Dispatch>();",
      "\tconst $2 = useSelector((state: iRootState) => state.$3);",
      "\treturn (",
      "\t\t",
      "\t);",
      "};",
      "export default React.memo(${1:FC});"
    ]
  }
}
